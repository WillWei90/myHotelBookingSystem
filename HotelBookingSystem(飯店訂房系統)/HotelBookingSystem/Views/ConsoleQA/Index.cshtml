@model PagedList.Core.IPagedList<HotelBookingSystem.Models.QA>

@{
    Layout = "~/Views/Shared/_LayoutConsole.cshtml";
    ViewData["Title"] = "問題列表";
}

<h1>問題列表</h1>

<!-- Tabs -->
<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link @(ViewBag.CurrentTab == "all" ? "active" : "")" href="@Url.Action("Index", new { tab = "all" })">全部</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(ViewBag.CurrentTab == "solved" ? "active" : "")" href="@Url.Action("Index", new { tab = "solved" })">已解決</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(ViewBag.CurrentTab == "unsolved" ? "active" : "")" href="@Url.Action("Index", new { tab = "unsolved" })">未解決</a>
    </li>
</ul>

<!-- 問題列表 -->
@Html.Partial("_QAList", Model)

<!-- 分頁按鈕 -->
<div class="d-flex justify-content-center mt-3">
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { tab = ViewBag.CurrentTab, page = Model.PageNumber - 1 })">上一頁</a>
            </li>
        }

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { tab = ViewBag.CurrentTab, page = i })">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { tab = ViewBag.CurrentTab, page = Model.PageNumber + 1 })">下一頁</a>
            </li>
        }
    </ul>
</div>


<script>
    // 展開/收起已回覆內容
    function toggleReplyContent(qaNo) {
        const content = document.getElementById(`content-${qaNo}`);
        const button = event.target.closest(".expand-button");

        if (content.style.display === "none" || !content.style.display) {
            content.style.display = "block"; // 展開
            button.classList.add("expanded");
        } else {
            content.style.display = "none"; // 收起
            button.classList.remove("expanded");
        }
    }

    // 顯示回覆表單
    function showReplyForm(qaNo, userName) {
        const modalHtml = `
            <div class="modal" id="replyModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">回覆問題</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="replyForm">
                                <div class="form-group">
                                    <label for="answer-${qaNo}">回答內容</label>
                                    <textarea id="answer-${qaNo}" class="form-control" rows="3" required></textarea>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                            <button type="button" class="btn btn-primary" onclick="submitReply('${qaNo}', '${userName}')">提交</button>
                        </div>
                    </div>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML("beforeend", modalHtml);
        const modal = new bootstrap.Modal(document.getElementById("replyModal"));
        modal.show();

        // 清除模態框時刪除 DOM
        document.getElementById("replyModal").addEventListener("hidden.bs.modal", function () {
            this.remove();
        });
    }

    // 提交回覆
    function submitReply(qaNo, userName) {
        const answer = document.getElementById(`answer-${qaNo}`).value;

        fetch('/ConsoleQA/ReplyAjax', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ QaNo: qaNo, Answer: answer, Name: userName })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert("回覆成功！");
                location.reload(); // 重新加載頁面
            } else {
                alert("回覆失敗：" + data.message);
            }
        })
        .catch(error => console.error("回覆失敗：", error));
    }
</script>


<style>
    .expandable-content {
        margin-top: 10px;
        padding: 10px;
        border-left: 3px solid #007bff;
        background-color: #f9f9f9;
        font-size: 14px;
    }

    .question-container {
        display: flex;
        flex-direction: column;
    }

    .toggle-button {
        font-size: 12px;
        color: #007bff;
        border: none;
        background: none;
        cursor: pointer;
    }

        .toggle-button:hover {
            text-decoration: underline;
        }
</style>