@model IEnumerable<HotelBookingSystem.Models.Member>

@{
    Layout = "~/Views/Shared/_LayoutConsole.cshtml"; // 使用全局布局
    ViewData["Title"] = "會員管理";
}

<div class="container mt-5">
    <h2 class="text-center">會員管理</h2>

    <!-- 搜尋表單 -->
    <form method="get" class="mt-4">
        <div class="row mb-3">
            <div class="col">
                <input type="text" name="searchTerm" class="form-control" value="@ViewBag.SearchTerm" placeholder="搜尋會員 (姓名或電話)" />
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary">搜尋</button>
            </div>
        </div>
    </form>

    <!-- 搜索結果 -->
    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm) && Model != null && Model.Any())
    {
        <h3 class="mt-4">會員資料</h3>

        @if (Model.Count() > 1)
        {
            <!-- 多筆結果顯示下拉選單 -->
            <div class="mb-3">
                <label for="memberSelect" class="form-label">選擇會員:</label>
                <select id="memberSelect" class="form-select" onchange="loadMemberDetails(this.value)">
                    <option value="">-- 請選擇會員 --</option>
                    @foreach (var member in Model)
                    {
                        <option value="@member.MemberNo">@member.UserName - @member.Phone</option>
                    }
                </select>
            </div>
            <div id="memberDetails" style="display:none;">
                <!-- 動態顯示會員詳細資料 -->
            </div>
        }
        else
        {
            <!-- 單筆結果直接顯示 -->
            var singleMember = Model.First();
            <div id="memberDetails">
                @Html.Partial("_MemberDetails", singleMember)
            </div>
        }
    }
    else if (string.IsNullOrEmpty(ViewBag.SearchTerm))
    {
        <p class="text-center text-muted">請輸入查詢條件以檢視會員資料。</p>
    }
    else
    {
        <p class="text-center text-muted">未找到相關會員資料。</p>
    }
</div>





<script>

    function loadMemberDetails(memberNo) {
        if (!memberNo) {
            document.getElementById("memberDetails").style.display = "none";
            document.getElementById("memberDetails").innerHTML = "";
            return;
        }

        // 發送 Ajax 請求到伺服器
        fetch(`/ConsoleMember/GetMemberDetails?memberNo=${memberNo}`)
            .then((response) => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.text(); // 將回應作為純文字處理
            })
            .then((html) => {
                // 將 HTML 插入到指定區域
                const memberDetails = document.getElementById("memberDetails");
                memberDetails.innerHTML = html;
                memberDetails.style.display = "block";
            })
            .catch((error) => {
                console.error("Error fetching member details:", error);
                alert("無法加載會員詳細資料，請稍後再試");
            });
    }


    // 顯示訂單
    function viewOrders(memberNo) {
        fetch(`/ConsoleMember/GetOrdersByMemberNo?memberNo=${memberNo}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const orders = data.orders;
                    const orderListContent = document.getElementById("orderListContent");
                    orderListContent.innerHTML = ""; // 清空現有內容

                    orders.forEach(order => {
                        const row = `
                            <tr>
                                <td>${order.orderNo}</td>
                                <td>${order.roomNo}</td>
                                <td>${order.roomName || "未指定"}</td>
                                <td>${order.startDate ? new Date(order.startDate).toLocaleDateString() : "未指定"}</td>
                                <td>${order.endDate ? new Date(order.endDate).toLocaleDateString() : "未指定"}</td>
                                <td>${order.isPay ? "已付款" : "未付款"}</td>
                                <td>${order.cancel ? "已取消" : "有效"}</td>
                            </tr>
                        `;
                        orderListContent.insertAdjacentHTML("beforeend", row);
                    });

                    document.getElementById("orderList").style.display = "block";
                } else {
                    alert("無法獲取訂單資料: " + data.message);
                }
            })
            .catch(error => {
                console.error("Error fetching orders:", error);
                alert("發生錯誤，請稍後再試。");
            });
    }

    // 隱藏訂單
    function hideOrders() {
        document.getElementById("orderList").style.display = "none";
    }

    // 更新會員資料的API呼叫
    function updateMember() {
        const memberData = {
            MemberNo: document.querySelector("input[name='MemberNo']").value,
            Phone: document.querySelector("input[name='Phone']").value,
        };

        fetch('/api/member/update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(memberData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('會員資料已更新');
                location.reload(); // 重新加載頁面以顯示更新後的資料
            } else {
                alert('更新失敗: ' + data.message);
            }
        })
        .catch(error => {
            console.error('錯誤:', error);
            alert('更新會員資料時出現錯誤');
        });
    }

    // 重置密碼的API呼叫
    function resetPassword(memberNo) {
        if (confirm("確定要重置密碼嗎？")) {
            fetch(`/ConsoleMember/ResetPassword/${memberNo}`, {
                method: 'POST',
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`密碼重置成功`);
                } else {
                    alert('重置密碼失敗: ' + data.message);
                }
            })
            .catch(error => {
                console.error('錯誤:', error);
                alert('重置密碼時出現錯誤');
            });
        }
    }
</script>


<style>
    /* 會員資料區樣式 */
    .member-details {
        display: flex;
        justify-content: flex-start; /* 改為靠左對齊 */
        align-items: center;
        gap: 20px; /* 調整圖片與文字間的間距 */
        margin-top: 20px;
    }

    /* 會員圖片區 */
    .member-photo {
        flex-shrink: 0; /* 防止圖片縮小 */
    }

    /* 會員資訊區 */
    .member-info {
        max-width: 500px;
        text-align: left;
    }

    /* 卡片風格 */
    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1rem;
        color: #555;
    }
</style>
